{"version":3,"sources":["components/errorMassage/error.gif","components/errorMassage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","link","getAllCharecters","offset","res","results","map","_transformCharacter","getCharecter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","hompage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","homepage","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleteon","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/4.0f338f62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: \"block\",\n        width: \"260px\",\n        height: \"260px\",\n        objectFit: \"contain\",\n        margin: \"0 auto\",\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n\n  const timestamp = `ts=1`;\n  const hash = \"hash=1da3b6bb6bfc1f6b1948dd46f7626027\";\n  const _apiBase = `https://gateway.marvel.com:443/v1/public/`;\n  const _apiKey = \"apikey=b21c527666e7784f4b1f86ec0774f8cf\";\n  const link = `${_apiKey}&${timestamp}&${hash}`;\n  const _baseOffset = 210;\n\n  const getAllCharecters = async (offset = _baseOffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${link}`\n    );\n\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharecter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${link}`);\n\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComics = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComic = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : `There is no description for this character`,\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      hompage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : \"No information about the number of pages\",\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n      language: comics.textObjects.language || \"en-us\",\n      price: comics.prices.price ? `${comics.prices.price}$` : \"not available\",\n    };\n  };\n\n  return {\n    loading,\n    error,\n    clearError,\n    getAllCharecters,\n    getCharecter,\n    getAllComics,\n    getComic,\n  };\n};\n\nexport default useMarvelService;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = { \"Content-Type\": \"application/json\" }\n    ) => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n\n        if (!response.ok) {\n          throw new Error(`could not fetch ${url}, status:${response.status}`);\n        }\n\n        const data = await response.json();\n\n        setLoading(false);\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, request, error, clearError };\n};\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMassage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState({});\n\n  const { loading, error, getCharecter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    // const timerId = setInterval(updateChar, 60000);\n\n    // return () => {\n    //   clearInterval(timerId);\n    // };\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n    getCharecter(id).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={updateChar} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={imgStyle}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMassage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport \"./charList.scss\";\n\nconst CharList = (props) => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { loading, error, getAllCharecters } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n\n    getAllCharecters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList((charList) => [...charList, ...newCharList]);\n    setNewItemLoading(false);\n    setOffset((offset) => offset + 9);\n    setCharEnded(ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n    // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n    // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n    // в отдельный компонент. Но кода будет больше, появится новое состояние\n    // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n    // По возможности, не злоупотребляйте рефами, только в крайних случаях\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  // Этот метод создан для оптимизации,\n  // чтобы не помещать такую конструкцию в метод render\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          tabIndex={0}\n          ref={(el) => (itemRefs.current[i] = el)}\n          key={item.id}\n          onClick={() => {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \" \" || e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    // А эта конструкция вынесена для центровки спиннера/ошибки\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMassage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nimport \"./charInfo.scss\";\n// import thor from \"../../resources/img/thor.jpeg\";\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, getCharecter, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n\n    clearError();\n    getCharecter(charId).then(onCharLoaded);\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const skeleteon = char || loading || error ? null : <Skeleton />;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleteon}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"There is no comics whit this charecter\"}\n        {comics.map((item, i) => {\n          if (i > 9) return;\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMassage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n  state = { error: false };\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from \"../../resources/img/vision.png\";\n\nconst MainPage = () => {\n  const [selectedChar, setChar] = useState(null);\n\n  const onCharSelected = (id) => {\n    setChar(id);\n  };\n\n  return (\n    <>\n      <ErrorBoundary>\n        <RandomChar />\n      </ErrorBoundary>\n      <div className=\"char__content\">\n        <ErrorBoundary>\n          <CharList onCharSelected={onCharSelected} />\n        </ErrorBoundary>\n        <ErrorBoundary>\n          <CharInfo charId={selectedChar} />\n        </ErrorBoundary>\n      </div>\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n    </>\n  );\n};\n\nexport default MainPage;\n"],"sourceRoot":""}